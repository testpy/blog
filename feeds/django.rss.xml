<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testpy</title><link>/</link><description></description><atom:link href="/feeds/django.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 25 Apr 2013 00:00:00 +0300</lastBuildDate><item><title>Writing tests with django and selenium</title><link>/writing-tests-with-django-and-selenium/</link><description>&lt;p&gt;Getting our Selenium tests to run faster can be complicated at times, because
there are a number of factors to be taken into consideration. Debugging these
tests is time consuming and the end result is almost always the same one - a
large part of the tests needs to be refactored.&lt;/p&gt;
&lt;p&gt;Luckily, for projects implemented with Django, we have the possibility to
explore a wide range of testing solutions, backed up by an active internet
community. Instead of always trying to use Selenium as a standalone solution,
we could analyze the possibility of having those tests integrated in our Django
project, and hence, be able to run with a simple command, all tests. By all
tests, I mean unit tests and functional tests.&lt;/p&gt;
&lt;p&gt;For a practical example, please have a look at this &lt;a class="reference external" href="https://github.com/ramonasuciu/django_selenium_tests"&gt;github&lt;/a&gt; repo. This is just an
example of how Selenium tests can be integrated with Django, with the use of
LiveServerTestCase class. Make sure to run pip install -r requirements.txt in a
virtualenv and you’re good to go.&lt;/p&gt;
&lt;p&gt;The application used for testing is &lt;a class="reference external" href="https://bitbucket.org/ubernostrum/django-registration/"&gt;django-registration&lt;/a&gt;, which provides
enough support for developing functional tests. We inserted a js library
(password_strength_plugin.js) to better illustrate the need of Selenium
(JS/CSS/HTML focused) automated tests.&lt;/p&gt;
&lt;p&gt;The advantages of this approach are numerous - you are able to test the
build as well, not only the deploy. Tests are faster, and, if you decide to
write your tests using a page object pattern method, then debugging will become
easier, as you’ll be able to faster track failures and their causes.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ramona Suciu</dc:creator><pubDate>Thu, 25 Apr 2013 00:00:00 +0300</pubDate><guid>tag:,2013-04-25:writing-tests-with-django-and-selenium/</guid><category>functional</category><category>django</category><category>selenium</category></item></channel></rss>